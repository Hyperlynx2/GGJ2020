

*SpikeTrap (prefab)
|  Trap.cs
|    Start()
|     Manager.RegisterTrap(this)
|    bool m_armed
|    void OnTripwireActivated()
|       start the payload moving, set trap back to disarmed
|    void OnPayloadHit()
|       game over man!
|    void Arm()
|       call when the player presses "arm" while facing it and within range etc?
|       m_armed = true
|       tell game manager
|       Payload.OnArmed()
|
+--Tripwire
|  trigger collider
|  tripwire.cs
|    override the Unity OnTriggerEnter and call Trap.OnTripwireActivated
|
+--SpikePayload
|  payload collider
|  SpikePayload.cs : Payload
|    override OnArmed()
|      play the pull the spikes back anim.  
|  

*SmashTrap (prefab)
|  Trap.cs
|    Start()
|     Manager.RegisterTrap(this)
|    bool m_armed
|    void OnTripwireActivated()
|       start the payload moving, set trap back to disarmed
|    void OnPayloadHit()
|       game over man!
|    void Arm()
|       call when the player presses "arm" while facing it and within range etc?
|       m_armed = true
|       tell game manager
|       Payload.OnArmed()
|
+--Tripwire
|  trigger collider
|  tripwire.cs
|    override the Unity OnTriggerEnter and call Trap.OnTripwireActivated
|  trip-plate 3d asset
|
+--SmashPayload
|  payload collider
|  SmashPayload.cs : Payload
|    override OnArmed()
|      play the pull the smashy battering ram back animation
  +---more complicated swingy death anim thing here.

Not in hierarchy:
payloadbase.cs
    override the Unity OnTriggerEnter, and call Trap.OnPayloadHit
    virtual void OnArmed() - do an animation or move to position or ???
    void OnHitPlayer() - go tell the player they're dead. call from derived payloads.


*GameManager
|  int m_numTrapsArmed
|  public void RegisterTrap(Trap)
|  OnExitTileReached()
|    if all the traps are armed, you win! and then go back to menu etc.

*Exit tile
|  collider
|  ExitTile.cs
|    OnTriggerActivated
|    GameManager.OnExitTileReached

Player
|  Player.cs
|    public float movespeed
|    public float angleturnrate
|    public Update()
|      take the input and turn etc.
|    // no ontrigger evaluating the different gameplay triggers - they call us.
|    void OnHitByPayload()
|      play dead anim
|      tell gamemanager we dead?
|    // actual stop us from going through walls collision stuff.
